
buildDir = "Build/$(configuration)/.$(target)"

version = "0.1.2"

examples = "Examples/*/umdoc.xml"
examples = "$(patsubst Examples/%/umdoc.xml,%,$(examples))"

targets = {

  all = {
    dependencies = { "umdoc", "manual", "$(examples)", "md2tex" }
  }

  umdoc = cppApplication + {
    dependencies = { "libnstd" }
    outputDir = "Build/$(configuration)"
    includePaths = { "Ext/libnstd/include" }
    libPaths = { "Build/$(configuration)/.libnstd" }
    libs = { "nstd" }
    defines = { "VERSION=\"$(version)\"" }
    root = "Src"
    files = {
      "Src/*.cpp" = cppSource
      "Src/*.h"
    }
    if tool == "vcxproj" {
      linkFlags += { "/SUBSYSTEM:CONSOLE" }
    }
    if platform == "Linux" {
      libs += { "pthread", "rt" }
      cppFlags += { "-Wno-delete-non-virtual-dtor" }
    }
  }
  
  manual = {
    dependencies = { "umdoc" }
    folder = "Doc"
    outputDir = "Build/$(configuration)"
    root = "Doc"
    files = { "Doc/*" }    
    input = files
    output = "$(outputDir)/umdoc-$(version).pdf"
    command = "Build/$(configuration)/umdoc Doc/manual.xml --packageVersion=$(version) -o $(output) -a $(buildDir)/tex"
  }
  
  "$(examples)" = {
    folder = "Examples"
    dependencies = { "umdoc" }
    outputDir = "Build/$(configuration)/Examples"
    root = "Examples/$(target)"
    files = { "Examples/$(target)/*" }  
    input = files
    output = "$(outputDir)/$(target).pdf"
    command = "Build/$(configuration)/umdoc Examples/$(target)/umdoc.xml -o $(output) -a $(buildDir)/tex"
  }
  
  md2tex = {
    folder = "Examples"
    dependencies = { "umdoc" }
    outputDir = "Build/$(configuration)/Examples"
    root = "Examples/$(target)"
    files = { "Examples/$(target)/*" }  
    input = files
    output = "$(outputDir)/$(target).pdf"
    command = "Build/$(configuration)/umdoc Examples/$(target)/example.md -o $(output) -a $(buildDir)/tex"
  }

  include "Ext/libnstd/libnstd.mare"
  libnstd += {
    folder = "Ext"
    enableDocument = "true"
  }

  package = {
    dependencies = { "umdoc", "manual", "$(examples)", "md2tex" }
    root = "Build/$(configuration)"
    buildDir = "Build/$(configuration)/.$(target)"
    outputDir = "Build/$(configuration)"
    files = {
      "Build/$(configuration)/umdoc$(if $(Win32),.exe) Build/$(configuration)/umdoc.pdf" = copyFile + {
        folder = "umdoc-$(version)"
      }
      "$(foreach name,$(examples) md2tex,Build/$(configuration)/Examples/$(name).pdf)" = copyFile + {
        folder = "umdoc-$(version)/Examples"
      }
      "Examples/*/*" = copyFile + {
        folder = "umdoc-$(version)/Examples/$(notdir $(dir $(file))"
      }
    }
    input = "$(addprefix $(buildDir)/umdoc-$(version)/,$(patsubst Build/$(configuration)/%,%,$(files)))"
    if host == "Win32" {
      output = "$(outputDir)/umdoc-$(version)-$(lower $(platform)).zip"
      command = "cmd /C \"cd $(buildDir) && 7z a ../$(notdir $(output)) $(patsubst $(buildDir)/%,%,$(input))\" >NUL"
    }
    else {
      output = "$(outputDir)/umdoc-$(version)-$(lower $(platform))-$(architecture).tar.gz"
      command = "tar -C$(buildDir) -czf $(output) $(patsubst $(buildDir)/%,%,$(input))"
    }
    message = "Creating $(output)"
  }

}

copyFile = {
  input = "$(file)"
  output = "$(buildDir)$(if $(folder),/$(folder))/$(notdir $(file))"
  if host == "Win32" {
    command = "copy $(subst /,\\,$(input)) $(subst /,\\,$(output)) >NUL"
  }
  else {
    command = "cp $(input) $(output)"
  }
  message = "$(patsubst $(buildDir)/%,%,$(output))"
}
